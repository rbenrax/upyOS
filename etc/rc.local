# This file script is called after init.sh and may content user startup commands same as above script.

#i2cscan 0                    # Scan for i2c devices

# Wifi sta
#wifi sta on                      # Turn on wifi in cliente mode
#wifi sta status   
#wifi sta config mac              # show mac
#wifi sta scan                    # scan wifi APs
#wifi sta connect <ssid> <password> <timeout> # Connect to wifi router
##wifi sta ifconfig 192.168.178.107 255.255.255.0 192.168.178.1 8.8.8.8 # set IP parameters (ip, mash, gw, dns)
#wifi sta config ssid             # show ssid
#wifi sta config channel          # show channel
#wifi sta ifconfig
#wifi sta disconnect
#wifi sta off
#wifi sta status

#ifconfig                     # Show Ip data

# Wifi ap
#wifi ap on                  # Enable AP mode
#wifi ap status
#wifi ap config ssid=<ssid> password=<password> authmode=3 channel=12 # Wifi AP set Connection parameters
#wifi ap config ssid         # show parameter ssid
#wifi ap config channel      # show parameter channel
#wifi ap ifconfig 192.168.3.100 255.255.255.0 192.168.3.1 8.8.8.8 # set IP parameters (ip, mash, gw, dns)
#wifi ap status
#wifi ap ifconfig            # Show IP parameters
#wifi ap off

#utelnetd start

# External prog test
#/opt/test_run.py 1 $? 3 $0 5 6 7

# Env vars traslate test
#export 0 opt
#echo Directory: $0
#ls $0
#echo $0
#skip 1 # skip 1 line
#env
#unset 0

#help

# > = Execute Python code
# < = Print Python code Execution

#> import os
#> print(dir(os))
#< dir(os)

#/opt/asy_test &
#/opt/thr_test

> sys.path.append("/opt")

#env
#echo $_ # Current PID

# Threads launch
#dht_test &
#asy_test &
#env
#echo pid: $! # Last batch PID
#wait $!

#thr_test &
#watch ps &

# Conditional execution:
#export ? 5   # set variable 0 to "5"
#if $? == 5 skip 3 # Skip 3 lines (will continue in 4, 5, etc)
#< 1
#< 2
#< 3
#< 4
#< 5
#if $0 == 5 return     # Ends shell script
#if $? == 5 run asy_test & # Summit asy_test

#test -f /etc/rc.local -v
#if $? == 1 run echo si $?
#if $? == 0 run echo no $?

#test -d /etc/rc.local -v
#if $? == 1 run echo si $?
#if $? == 0 run echo no $?

#skip 1
#uhttpd start &

# Exit form OS to python REPL
#poweroff

