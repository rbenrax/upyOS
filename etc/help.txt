smolOS Help:

Adapted by rbenrax, source available in https://github.com/rbenrax/smolOS, based in Krzysztof Krystian Jankowski work available in smol.p1x.in/os/

Explanation:

The objective is to provide one more layer to micropython that allows us to manage a microcontroller in a similar way to what we use every day in a common computer, with the use of more simple programs that can be complemented in a more flexible way, obviously at the cost of lower performance and efficiency, but giving more facilities for those who start using microcontrollers.

In main.py we can launch grub or smolos directly (see files).

Grub will create in /etc dir a file (if doesn't exists) for configure the specific board pins, gpios and other parameters, you can remove unused parameter to optimize the memory use, also allow stop the system boot if any program hung the load.

In smolos boot, two shell scripts are executed, init.sh and rc.local, init.sh will launch system start up commands, and rc.local programa and commands specifics for a user solution, you can remove the commands you don't need and make the boot as fast as you want, as well as include commands or programs that you need.

Exists internal and external commands, and internal and externals shell scripts, internal located in /bin directory and are exceuted without extention, external can be located in any directory and are executed directly, external commands are self-explanatory and some have help (--h).

The system can be extended with more external commands and programs with the aim of keeping the memory footprint as low as possible, because the ram is quite small but the flash is big enough.

The sdata module contains all the system data, allowing access to the board configuration parameters, system configuration parameters, environment variables, etc., allowing access to these parameters between programs and scripts.

If system hungs in boot (ex. defective program), we can delete init.sh, then the system wil boot in recovery mode, also we can use recovery command in any time, which moves init.sh to init.rec and viceversa.

I hope it is useful for you!, there are things to do, and to improve.

Directories structure:

/
boot.py         Micropython statup file
main.py         Micropython statup file (boot system)

    /bin        Commands and shell scripts
    /etc        Configuration files
    /extlib     External libraries
    /lib        System implementations libraries
    /opt        Specific solution or add-on programs (not in path)
    /tmp        Temporary directory (to put what you don't know where to put :-)


Internals commands:

help:   This help
clear:  Clears the screen
cp:     Copy files
mv:     Move files
rm:     Remove files
sh      run shell script, if no .sh extention
py:     Run python code
pwd:    Show current directory
cd:     Change default directory
mkdir:  Make directory
rmdir:  Remove directory
exit:   Exit to Micropython shell

